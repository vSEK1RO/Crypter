import{m as H,e as v,u as I,n as z,f as E,g as R,h as T,a as o,w as s,F as U,r as y,o as $,d as u,i as _,t as b,j as S,c as F,k as J,E as i,l as K}from"./index-9m_TVREg.js";import{t as C,f as W}from"./toBinary-GVOEpgjp.js";import{_ as q}from"./cTable-DiynaARr.js";const L=H("encrypt",{state:()=>({data:[]}),actions:{set(){localStorage.setItem("encryptStore",JSON.stringify({data:this.data}))},get(){const d=JSON.parse(localStorage.getItem("encryptStore"));(d==null?void 0:d.data[0])!==void 0&&(d.data[0].hasOwnProperty("date")&&d.data[0].hasOwnProperty("name")&&d.data[0].hasOwnProperty("enc")&&d.data[0].hasOwnProperty("raw")&&d.data[0].hasOwnProperty("pub")?this.data=d.data:this.data=[])}}}),j=u("h2",null,"Copy and share encrypted message",-1),G={class:"drawer-media-wrapper"},Q={class:"drawer-media"},X=u("h3",null,"Raw",-1),Y={class:"drawer-media"},Z=u("h3",null,"Encrypted",-1),D={class:"drawer-media"},ee=u("h3",null,"Public key",-1),te=u("h2",null,"Encrypt message",-1),re={__name:"cEncrypt",setup(d){const w=v(window.outerWidth<900),k=I(),P=z(),t=L(),n=E({name:"",key:atob(P.query.publicKey||""),message:""}),x=v(!1),l=E({isActive:!1,name:"",raw:"",enc:"",pub:""});async function N(r){let e=!1;if(t.data.findIndex(p=>p.name==n.name)!=-1&&(i.error({message:"Name already exists"}),e=!0,await h(1)),n.name==""&&(i.error({message:"Name must not be empty"}),e=!0,await h(1)),n.key==""&&(i.error({message:"Public key must not be empty"}),e=!0,await h(1)),n.message==""&&(i.error({message:"Msg must not be empty"}),e=!0),e)return;x.value=!0;let a="";try{a=C(W.pki.publicKeyFromPem(n.key).encrypt(C(n.message),"RSA-OAEP"))}catch(p){i.error({message:p});return}let m=new Date;t.data.unshift({date:m,name:n.name,enc:a,raw:n.message,pub:n.key}),t.set(),console.log(a),console.log(`"${n.name}" msg was encrypted`)}function h(r){return new Promise(e=>setTimeout(e,r))}function M(r){let e=t.data.findIndex(a=>a.name==r);l.isActive=!0,l.name=t.data[e].name,l.enc=t.data[e].enc,l.raw=t.data[e].raw,l.pub=t.data[e].pub,console.log(`"${r}" encrypted msg was shown`)}function O(r){navigator.clipboard.writeText(l.enc).then(()=>{i.success("Copied to clipboard")}).catch(e=>{i.error("Error during copying")}),console.log(`"${l.name}" encrypted msg was copied`)}function A(r,e){let a=t.data.findIndex(m=>m.name==r);if(e=="click"){let m=window.location.protocol,p=window.location.hostname,c=window.location.port;c==""&&(c="443");let{href:g}=k.resolve({path:"decrypt",query:{encryptedMsg:t.data[a].enc}});navigator.clipboard.writeText(`${m}//${p}:${c}/Crypter/${g}`).then(()=>{i.success("Copied to clipboard")}).catch(V=>{i.error("Error during copying")}),console.log(`link to "${l.name}" encrypted msg was copied`)}else e=="cancel"?console.log(`redirect to "${r}" encrypted msg cancelled`):e=="confirm"&&(k.push({path:"decrypt",query:{encryptedMsg:t.data[a].enc}}),console.log(`redirect to "${r}" encrypted msg confirmed`))}function B(r){let e=t.data.findIndex(a=>a.name==r);K.confirm(`Are you sure to delete msg "${r}"?`).then(()=>{t.data.splice(e,1),t.set(),console.log(`"${r}" encrypted msg was deleted`)}).catch(a=>{a!="cancel"&&ElNotification.error({title:"Error",message:`deleteHandler(${r})
`})})}return R(()=>{t.get()}),addEventListener("resize",()=>{w.value=window.outerWidth<900}),(r,e)=>{const a=y("el-text"),m=y("el-button"),p=y("el-drawer"),c=y("el-form-item"),g=y("el-input"),V=y("el-form");return $(),T(U,null,[o(p,{size:w.value?"100%":"50%",modelValue:l.isActive,"onUpdate:modelValue":e[0]||(e[0]=f=>l.isActive=f)},{header:s(()=>[j]),default:s(()=>[u("div",G,[u("div",Q,[o(a,null,{default:s(()=>[X,_(" "+b(l.raw),1)]),_:1})]),u("div",Y,[o(a,null,{default:s(()=>[Z,_(" "+b(l.enc),1)]),_:1})]),u("div",D,[o(a,null,{default:s(()=>[ee,_(" "+b(l.pub),1)]),_:1})])])]),footer:s(()=>[o(m,{type:"success",onClick:O},{default:s(()=>[_(" Copy to clipboard ")]),_:1})]),_:1},8,["size","modelValue"]),o(V,null,{default:s(()=>[o(c,null,{default:s(()=>[o(a,null,{default:s(()=>[te]),_:1})]),_:1}),o(c,null,{default:s(()=>[o(g,{modelValue:n.name,"onUpdate:modelValue":e[1]||(e[1]=f=>n.name=f),placeholder:"message name"},null,8,["modelValue"])]),_:1}),o(c,null,{default:s(()=>[o(g,{autosize:"",type:"textarea",modelValue:n.message,"onUpdate:modelValue":e[2]||(e[2]=f=>n.message=f),placeholder:"message"},null,8,["modelValue"])]),_:1}),o(c,null,{default:s(()=>[o(g,{autosize:"",type:"textarea",modelValue:n.key,"onUpdate:modelValue":e[3]||(e[3]=f=>n.key=f),placeholder:"public key"},null,8,["modelValue"])]),_:1}),o(c,null,{default:s(()=>[o(m,{onClick:N,type:"success"},{default:s(()=>[_(" Encrypt ")]),_:1})]),_:1}),S(t).data.length!=0?($(),F(c,{key:0},{default:s(()=>[o(q,{data:S(t).data,loading:x.value,"is-mobile":w.value,onShow:M,onShare:A,onDelete:B},null,8,["data","loading","is-mobile"])]),_:1})):J("",!0)]),_:1})],64)}}};export{re as default};
