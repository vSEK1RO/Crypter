import{m as H,f as $,u as B,n as U,g as x,h as z,e as P,a as n,w as l,F,r as p,o as V,d as y,i as v,t as O,j as E,c as R,k as j,E as d,l as J}from"./index-DNSKrwoa.js";import{f as K,t as W}from"./toBinary-DQ0xzTeK.js";const q=H("encrypt",{state:()=>({msg:[]}),actions:{set(){localStorage.setItem("encryptStore",JSON.stringify(this))},get(){const _=JSON.parse(localStorage.getItem("encryptStore"));_!=null&&(this.msg=_.msg)}}}),L=y("h2",null,"Copy and share encrypted message",-1),D={class:"drawer-media-wrapper"},G={class:"drawer-media"},Q=y("h2",null,"Encrypt message",-1),Z={__name:"cEncrypt",setup(_){const w=$(window.outerWidth<900),k=B(),C=U(),o=q(),a=x({name:"",key:atob(C.query.publicKey||""),message:""}),h=$(!1),c=x({isActive:!1,name:"",media:""});async function I(t){let e=!1;if(o.msg.findIndex(S=>S.name==a.name)!=-1&&(d.error({title:"Invalid input",message:"Name already exists"}),e=!0,await b(1)),a.name==""&&(d.error({title:"Invalid input",message:"Name must not be empty"}),e=!0,await b(1)),a.key==""&&(d.error({title:"Invalid input",message:"Public key must not be empty"}),e=!0,await b(1)),a.message==""&&(d.error({title:"Invalid input",message:"Msg must not be empty"}),e=!0),e)return;h.value=!0;let s=btoa(K.pki.publicKeyFromPem(a.key).encrypt(W(a.message),"RSA-OAEP"));h.value=!1;let i=new Date;const g=i.getUTCHours().toString().padStart(2,"0"),r=i.getUTCMinutes().toString().padStart(2,"0"),m=i.getMonth().toString().padStart(2,"0"),f=i.getDate().toString().padStart(2,"0");o.msg.push({date:`${g}:${r.toString().padStart(2)} - ${f}.${m}`,name:a.name,enc:s}),o.set(),console.log(s),console.log(`"${a.name}" msg was encrypted`)}function b(t){return new Promise(e=>setTimeout(e,t))}function M(t){let e=o.msg.findIndex(s=>s.name==t);c.isActive=!0,c.media=o.msg[e].enc,c.name=o.msg[e].name,console.log(`"${t}" encrypted msg was shown`)}function N(t){navigator.clipboard.writeText(c.media).then(()=>{d.success("Copied to clipboard")}).catch(e=>{d.error("Error during copying")}),console.log(`"${c.name}" encrypted msg was copied`)}function T(t,e){let s=o.msg.findIndex(i=>i.name==t);if(e=="click"){let i=window.location.protocol,g=window.location.hostname,r=window.location.port;r==""&&(r="443");let{href:m}=k.resolve({path:"decrypt",query:{encryptedMsg:o.msg[s].enc}});navigator.clipboard.writeText(`${i}//${g}:${r}${m}`).then(()=>{d.success("Copied to clipboard")}).catch(f=>{d.error("Error during copying")}),console.log(`link to "${c.name}" encrypted msg was copied`)}else e=="cancel"?console.log(`redirect to "${t}" encrypted msg cancelled`):e=="confirm"&&(k.push({path:"decrypt",query:{encryptedMsg:o.msg[s].enc}}),console.log(`redirect to "${t}" encrypted msg confirmed`))}function A(t){let e=o.msg.findIndex(s=>s.name==t);J.confirm(`Are you sure to delete msg "${t}"?`).then(()=>{o.msg.splice(e,1),o.set(),console.log(`"${t}" encrypted msg was deleted`)}).catch(s=>{s!="cancel"&&ElNotification.error({title:"Error",message:`deleteHandler(${t})
`})})}return z(()=>{o.get()}),addEventListener("resize",()=>{w.value=window.outerWidth<900}),(t,e)=>{const s=p("el-text"),i=p("el-button"),g=p("el-drawer"),r=p("el-form-item"),m=p("el-input"),f=p("cTable"),S=p("el-form");return V(),P(F,null,[n(g,{size:w.value?"100%":"50%",modelValue:c.isActive,"onUpdate:modelValue":e[0]||(e[0]=u=>c.isActive=u)},{header:l(()=>[L]),default:l(()=>[y("div",D,[y("div",G,[n(s,null,{default:l(()=>[v(O(c.media),1)]),_:1})])])]),footer:l(()=>[n(i,{type:"success",onClick:N},{default:l(()=>[v(" Copy to clipboard ")]),_:1})]),_:1},8,["size","modelValue"]),n(S,null,{default:l(()=>[n(r,null,{default:l(()=>[n(s,null,{default:l(()=>[Q]),_:1})]),_:1}),n(r,null,{default:l(()=>[n(m,{modelValue:a.name,"onUpdate:modelValue":e[1]||(e[1]=u=>a.name=u),placeholder:"message name"},null,8,["modelValue"])]),_:1}),n(r,null,{default:l(()=>[n(m,{autosize:"",type:"textarea",modelValue:a.message,"onUpdate:modelValue":e[2]||(e[2]=u=>a.message=u),placeholder:"message"},null,8,["modelValue"])]),_:1}),n(r,null,{default:l(()=>[n(m,{autosize:"",type:"textarea",modelValue:a.key,"onUpdate:modelValue":e[3]||(e[3]=u=>a.key=u),placeholder:"public key"},null,8,["modelValue"])]),_:1}),n(r,null,{default:l(()=>[n(i,{onClick:I,type:"success"},{default:l(()=>[v(" Encrypt ")]),_:1})]),_:1}),n(r,null,{default:l(()=>[E(o).msg.length!=0?(V(),R(f,{key:0,data:E(o).msg,loading:h.value,"is-mobile":w.value,onShow:M,onShare:T,onDelete:A},null,8,["data","loading","is-mobile"])):j("",!0)]),_:1})]),_:1})],64)}}};export{Z as default};
